{
  "hash": "9c5427fefd0b16640b7535e663c14036",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: presentation 0\n---\n\n#### 필요한 패키지 불러오기\n\n::: {#acba8279 .cell execution_count=1}\n``` {.python .cell-code}\nimport pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n```\n:::\n\n\n#### 데이터 불러오기\n\n::: {#6d6638d7 .cell execution_count=2}\n``` {.python .cell-code}\nmarket = pd.read_excel(\"data/traditionalmarket.xlsx\")\nmarket2 = market.copy()\n```\n:::\n\n\n#### 변수명 재설정하기\n\n::: {#e6961e3c .cell execution_count=3}\n``` {.python .cell-code}\nmarket2 = market2.rename(columns = {\"시장명\" : \"market_name\", \n                                    \"시장유형\" : \"type\",\n                                    \"소재지도로명주소\" : \"open_period\",\n                                    \"소재지지번주소\" : \"address_old\",\n                                    \"점포수\" : \"market_count\",\n                                    \"사용가능상품권\" : \"certificate\",\n                                    \"공중화장실 보유여부\" :\"public_toilet\",\n                                    \"주차장 보유여부\" : \"parking_lot\",\n                                    \"개설년도\" : \"year\",\n                                    \"데이터기준일자\" : \"data_date\"})\n```\n:::\n\n\n#### 데이터 변수별 요약통계량과 정보 확인하기\n\n::: {#8a544a5c .cell execution_count=4}\n``` {.python .cell-code}\nmarket2['market_count'].describe()\nmarket2[\"public_toilet\"].info()\nmarket2[\"parking_lot\"].info()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n<class 'pandas.core.series.Series'>\nRangeIndex: 1439 entries, 0 to 1438\nSeries name: public_toilet\nNon-Null Count  Dtype \n--------------  ----- \n1439 non-null   object\ndtypes: object(1)\nmemory usage: 11.4+ KB\n<class 'pandas.core.series.Series'>\nRangeIndex: 1439 entries, 0 to 1438\nSeries name: parking_lot\nNon-Null Count  Dtype \n--------------  ----- \n1439 non-null   object\ndtypes: object(1)\nmemory usage: 11.4+ KB\n```\n:::\n:::\n\n\n#### market_scale 파생변수 생성과 막대그래프 확인\n\n::: {#c0e987d3 .cell execution_count=5}\n``` {.python .cell-code}\nplt.clf()\nmarket2 = market2.assign(market_scale = np.where(market2[\"market_count\"] >= 134, \"large\", \n                                        np.where(market2[\"market_count\"] >= 50, \"medium\", \"small\")))\nsns.countplot(data = market2, x = 'market_scale', hue = 'market_scale')\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](presentation 0_files/figure-html/cell-6-output-1.png){width=593 height=429}\n:::\n:::\n\n\n#### conv_level 파생변수 생성과 막대그래프 확인\n\n::: {#f35f0997 .cell execution_count=6}\n``` {.python .cell-code}\nplt.clf()\nmarket2['conv_level'] = np.where((market2['public_toilet'] == 'Y') & (market2['parking_lot'] == 'Y'), 'high', \n                   np.where((market2['public_toilet'] == 'N') & (market2['public_toilet'] == 'N') , 'low', 'intermediate'))\nsns.countplot(data = market2, x = 'conv_level', hue = 'conv_level')\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](presentation 0_files/figure-html/cell-7-output-1.png){width=593 height=429}\n:::\n:::\n\n\n#### 시장유형 및 점포규모의 시장개수 알아보기\n\n::: {#1ba2ed92 .cell execution_count=7}\n``` {.python .cell-code}\ndf = market2.groupby([\"type\", \"market_scale\"], as_index = False) \\\n            .agg(market_count = (\"market_scale\", \"count\"))\ndf.sort_values('market_count', ascending = False)\n```\n\n::: {.cell-output .cell-output-display execution_count=7}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>type</th>\n      <th>market_scale</th>\n      <th>market_count</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>1</th>\n      <td>상설</td>\n      <td>medium</td>\n      <td>532</td>\n    </tr>\n    <tr>\n      <th>0</th>\n      <td>상설</td>\n      <td>large</td>\n      <td>281</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>상설</td>\n      <td>small</td>\n      <td>189</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>상설+정기</td>\n      <td>medium</td>\n      <td>145</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>정기</td>\n      <td>small</td>\n      <td>117</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>상설+정기</td>\n      <td>large</td>\n      <td>66</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>상설+정기</td>\n      <td>small</td>\n      <td>48</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>정기</td>\n      <td>medium</td>\n      <td>46</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>정기</td>\n      <td>large</td>\n      <td>15</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n#### 막대그래프로 알아보기\n\n::: {#9be7cdf9 .cell execution_count=8}\n``` {.python .cell-code}\nplt.clf()\nsns.barplot(data = df, x = 'type', y = 'market_count', hue = 'market_scale')\nplt.show()\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nC:\\DS\\Python\\Python312\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning: Glyph 49345 (\\N{HANGUL SYLLABLE SANG}) missing from font(s) DejaVu Sans.\n  fig.canvas.print_figure(bytes_io, **kw)\nC:\\DS\\Python\\Python312\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning: Glyph 49444 (\\N{HANGUL SYLLABLE SEOL}) missing from font(s) DejaVu Sans.\n  fig.canvas.print_figure(bytes_io, **kw)\nC:\\DS\\Python\\Python312\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning: Glyph 51221 (\\N{HANGUL SYLLABLE JEONG}) missing from font(s) DejaVu Sans.\n  fig.canvas.print_figure(bytes_io, **kw)\nC:\\DS\\Python\\Python312\\Lib\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning: Glyph 44592 (\\N{HANGUL SYLLABLE GI}) missing from font(s) DejaVu Sans.\n  fig.canvas.print_figure(bytes_io, **kw)\n```\n:::\n\n::: {.cell-output .cell-output-display}\n![](presentation 0_files/figure-html/cell-9-output-2.png){width=593 height=429}\n:::\n:::\n\n\n",
    "supporting": [
      "presentation 0_files"
    ],
    "filters": [],
    "includes": {
      "include-in-header": [
        "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js\" integrity=\"sha512-c3Nl8+7g4LMSTdrm621y7kf9v3SDPnhxLNhcjFJbKECVnmZHTdo+IRO05sNLTH/D3vA6u1X32ehoLC7WFVdheg==\" crossorigin=\"anonymous\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js\" integrity=\"sha512-bLT0Qm9VnAYZDflyKcBaQ2gg0hSYNQrJ8RilYldYQ1FxQYoCLtUjuuRuZo+fjqhx/qtq/1itJ0C2ejDxltZVFg==\" crossorigin=\"anonymous\" data-relocate-top=\"true\"></script>\n<script type=\"application/javascript\">define('jquery', [],function() {return window.jQuery;})</script>\n"
      ]
    }
  }
}