---
title: "presentation 0"
jupyter: python3
---

#### 필요한 패키지 불러오기

```{python}
import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt
```

#### 데이터 불러오기

```{python}
market = pd.read_excel("data/traditionalmarket.xlsx")
market2 = market.copy()
```

#### 변수명 재설정하기

```{python}
market2 = market2.rename(columns = {"시장명" : "market_name", 
                                    "시장유형" : "type",
                                    "소재지도로명주소" : "open_period",
                                    "소재지지번주소" : "address_old",
                                    "점포수" : "market_count",
                                    "사용가능상품권" : "certificate",
                                    "공중화장실 보유여부" :"public_toilet",
                                    "주차장 보유여부" : "parking_lot",
                                    "개설년도" : "year",
                                    "데이터기준일자" : "data_date"})
```

#### 데이터 변수별 요약통계량과 정보 확인하기

```{python}
market2['market_count'].describe()
market2["public_toilet"].info()
market2["parking_lot"].info()
```

#### market_scale 파생변수 생성과 막대그래프 확인

```{python}
plt.clf()
market2 = market2.assign(market_scale = np.where(market2["market_count"] >= 134, "large", 
                                        np.where(market2["market_count"] >= 50, "medium", "small")))
sns.countplot(data = market2, x = 'market_scale', hue = 'market_scale')
plt.show()
```

#### conv_level 파생변수 생성과 막대그래프 확인

```{python}
plt.clf()
market2['conv_level'] = np.where((market2['public_toilet'] == 'Y') & (market2['parking_lot'] == 'Y'), 'high', 
                   np.where((market2['public_toilet'] == 'N') & (market2['public_toilet'] == 'N') , 'low', 'intermediate'))
sns.countplot(data = market2, x = 'conv_level', hue = 'conv_level')
plt.show()
```

#### 시장유형 및 점포규모의 시장개수 알아보기

```{python}
df = market2.groupby(["type", "market_scale"], as_index = False) \
            .agg(market_count = ("market_scale", "count"))
df.sort_values('market_count', ascending = False)
```

#### 막대그래프로 알아보기

```{python}
plt.clf()
sns.barplot(data = df, x = 'type', y = 'market_count', hue = 'market_scale')
plt.show()
```
